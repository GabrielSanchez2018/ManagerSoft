import { Component, EventEmitter, OnInit ,Output,ViewChild, ViewChildren} from '@angular/core';
//import {InvoiceSummaryDialogComponent} from '../../dialogs/invoice-summary-dialog/invoice-summary-dialog.component';
import { MatDialog, MatDialogRef } from '@angular/material/dialog';

import {HttpClient} from '@angular/common/http';
import { AssetCreateComponent } from '../../dialogs/asset-create/asset-create.component';
import { AssetTypeComponent } from 'src/app/dialogs/asset-type/asset-type.component';
import { ServiceCreateDeleteDialogComponent } from 'src/app/dialogs/service-create-delete-dialog/service-create-delete-dialog.component';
import { MatCheckboxChange, MatPaginator, MatSort ,MatTableDataSource } from '@angular/material';
import { CookieService } from 'ngx-cookie-service';
import {MatSlideToggleModule} from '@angular/material/slide-toggle';
import { error } from '@angular/compiler/src/util';
import { FormBuilder, Validators } from '@angular/forms';



@Component({
  selector: 'app-asset-checkout',
  templateUrl: './asset-checkout.component.html',
  styleUrls: ['./asset-checkout.component.css']
})
export class AssetCheckoutComponent implements OnInit {
  tickets: string[] = ['ticket' ];
  isChecked = false;
  selectedValue: boolean;
  displayedColumns = ['assetNumber',
  'assetTyp', 'assetModel', 'assetTypes', 'location', 'shelf','bin', 'date'];
  asset: any;
  AssetNumber: string;
  form: any;
  private _id: string;
  username: string;
  quantity: any;

  constructor(private fb: FormBuilder,private http: HttpClient, private dialogRef: MatDialogRef<AssetCheckoutComponent>, private cookieService: CookieService) {
   

    
   this.username = this.cookieService.get('sessionuser')
   
    this.AssetNumber = this.cookieService.get('AssetNumber');
    this.http.get('/api/asset/' ).subscribe(res => {

      if(Array.isArray(res)){
        this.asset = res.filter(q => q.assetNumber === this.AssetNumber);;
      }
      console.log('this asset in page checkout', this.asset[0]._id)
    }, err => {
      console.log(err);
    });

    console.log('event',this.isChecked)
    
  }
  selectChange( $event) {
    //In my case $event come with a id value
    console.log('event',this.tickets)
  }

  ngOnInit() {
    
    this.form=this.fb.group({
      assetNumber: [null, Validators.compose([Validators.required])],
      assetTyp: [null, Validators.compose([Validators.required])],
      assetModel: [null, Validators.compose([Validators.required])],
      types: [null, Validators.compose([Validators.required])],
      location: [null, Validators.compose([Validators.required])],
      shelf: [null, Validators.compose([Validators.required])],
      bin: [null, Validators.compose([Validators.required])],
      img: [null, Validators.compose([Validators.required])],
      quantity: [null, Validators.compose([Validators.required])],


    });
    console.log('this asset type', this.form)
    console.log('selected', this.selectedValue)
    console.log('selected', this.form.value.quantity
    )
  
  }
  
  @Output()
  change: EventEmitter<MatCheckboxChange>



  checkOut(){

    

    console.log('we are going to delete this id',this.asset)
    console.log('username cookie', this.username)
       // sending email 
       console.log('checked', this.isChecked)
       if(this.isChecked === true){
         this.http.post('/api/mail/send',{
           from: 'gabo797@gmail.com',
           recipient: 'gabrielsanchezserna@outlook.com',       
           subject: 'worked',
           text: 'got it',
           html: "<p> A ticket was generated by</p>" + this.username + "<br>" +
           "<p> The following item was checked out </p>"  +"<p>Asset Number:</p>"+ this.asset[0].assetNumber
           +"<p>Asset Type:</p>"+ this.asset[0].assetTyp
           + "<p>Asset Model:</p>"+ this.asset[0].assetModel
           +"<p>Asset Brand:</p>"+ this.asset[0].types
           +"<p>Asset Shelf:</p>"+ this.asset[0].shelf  
           +"<p>Asset bin:</p>"+ this.asset[0].bin
           +"<p>Asset Type:</p>"+ this.asset[0].img
           // html body
         }).subscribe(res =>{
          console.log(res)
         }) 
       }else { }
    
    this.http.post('/api/itemcheckout/', {

        checkoutasset: this.asset,
        username: this.username,
        quantity:  this.form.value.quantity
      // assetNumber: data.assetNumber,
      // assetTyp: data.assetTyp,
      // assetModel: data.assetModel,
      // types: data.types,
      // location: data.location,
      // shelf: data.shelf,
      // bin: data.bin,
      // img: data.img



    }).subscribe(res => {
      console.log("this is after sucribing", res)

   
        this.dialogRef.close();
      // this.a = this.assets.concat([res]);
      

    }, err => {
      console.log(err);
    });
  



    // delete(AssetId) {
    //   const dialogRef = this.dialog.open(ServiceCreateDeleteDialogComponent, {
    //     data: {
    //       AssetId
    //     },
    //     disableClose: true,
    //     width: '800px'
    //   });

    //   dialogRef.afterClosed().subscribe(result =>{
    //     if (result === 'confirm'){
    //       this.http.delete('/api/asset/' + AssetId).subscribe(res => {
    //         console.log('Invoice deleted');
    //         if(Array.isArray(this.assets)){
    //           this.assets = this.assets.filter(q => q._id !== AssetId);

    //         }

    //         console.log(this.assets);
    //       });
    //     }
    //   });
    // }

  }

  close(){
    this.dialogRef.close();
  }


}
